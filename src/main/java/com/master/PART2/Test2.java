package com.master.PART2;

/**
 * @author ColorXJH
 * @version 1.0
 * @description:
 * @date 2024-01-26 8:24
 */
public class Test2 {
}
//在你想要获取由证书颁发机构（CA）签发的证书时，一般的流程如下：
//
//生成密钥对： 你生成一对非对称密钥，包括私钥和公钥。
//
//证书请求（CSR）： 你生成一个证书请求（Certificate Signing Request，CSR），其中包含你的公钥以及一些身份信息，例如组织名、域名等。CSR 是一个包含公钥和身份信息的文本文件，但不包含私钥。
//
//提交 CSR 给 CA： 你将 CSR 提交给证书颁发机构。在这个过程中，CA 不需要你的私钥，因为 CSR 只包含公钥和相关的身份信息。
//
//身份验证： CA 对你的身份信息进行验证。这可能涉及到验证你的域名所有权（通过电子邮件、DNS 记录等方式），组织身份（通过公司注册信息等方式），或其他相关的身份信息。
//
//签发证书： 一旦你的身份验证通过，CA 使用自己的私钥对 CSR 进行数字签名，生成证书。证书中包含你的公钥、身份信息以及 CA 的数字签名。
//
//证书颁发： CA 将签发的证书返回给你。
//
//在这个过程中，私钥只保留在你的控制下，不会被传输给 CA。CA 通过对 CSR 进行签名，确保了证书的真实性和完整性。一旦你获得了由 CA 签发的证书，其他客户端可以通过信任该 CA 的公钥来验证证书的有效性。
//
//其他客户端通常有一个受信任的根证书存储，其中包含一组已知的 CA 公钥。当他们收到你的证书时，将会使用根证书存储中的 CA 公钥来验证证书的签名。这个过程建立在对 CA 的信任之上，因为如果客户端信任了 CA，它就会信任由 CA 签发的证书。